---
dist: xenial
language: minimal
branches:
  only:
    - stable-2.0
    - master
addons:
  hosts:
    - testing.acme.com
  apt:
    packages:
      - codespell
      - devscripts
      - libpango1.0-dev
      - libdbd-pg-perl
      - libdbd-sqlite3-perl
      - libdbi-perl
      - libdevel-confess-perl
      - libdevel-cover-perl
      - libfile-copy-recursive-perl
      - libfile-readbackwards-perl
      - libfile-slurp-perl
      - libhtml-template-perl
      - libhtml-template-pro-perl
      - libhttp-server-simple-perl
      - libio-socket-inet6-perl
      - libio-stringy-perl
      - liblist-moreutils-perl
      - liblog-dispatch-perl
      - liblog-log4perl-perl
      - libmodule-build-perl
      - libnet-dns-perl
      - libnet-ip-perl
      - libnet-server-perl
      - libnet-snmp-perl
      - libnet-ssleay-perl
      - libparallel-forkmanager-perl
      - libparams-validate-perl
      - librrds-perl
      - libtest-class-perl
      - libtest-deep-perl
      - libtest-differences-perl
      - libtest-exception-perl
      - libtest-longstring-perl
      - libtest-mockmodule-perl
      - libtest-mockobject-perl
      - libtest-perl-critic-perl
      - liburi-perl
      - libwww-perl
      - libxml-dumper-perl
      - libxml-libxml-perl
      - libxml-parser-perl
      - python3-flake8
      - shellcheck
      - dh-make-perl
      - libdevel-cover-perl
      - libhttp-tiny-perl
      - libio-socket-ssl-perl
      - libjson-pp-perl
      - libyaml-perl
      - libmodule-build-tiny-perl
notifications:
  email: false
  irc:
    on_success: change  # no need for spam
    on_failure: always
    channels:
      - "irc.oftc.net#munin"
    template:
      - "%{repository} (%{branch} - %{commit} : %{author}): %{message}"
      - "Build details: %{build_url}"
matrix:
  # we don't need to continue any build when 1 test is failing.
  fast_finish: true

env:
  # specify test level and announce cpanm's installation directory
  - TEST_MEDIUM=1

before_install:
  - ( cd /tmp && wget https://cpan.metacpan.org/authors/id/M/MI/MIKIHOSHI/Devel-Cover-Report-Coveralls-0.13.tar.gz )
  - ( cd /tmp && tar zxvf Devel-Cover-Report-Coveralls-0.13.tar.gz )
  - ( cd /tmp && dh-make-perl make --build Devel-Cover-Report-Coveralls-0.13 )
  - ( cd /tmp && sudo dpkg -i libdevel-cover-report-coveralls-perl*.deb )
  - ( cd /tmp && wget http://ftp.de.debian.org/debian/pool/main/libh/libhttp-server-simple-cgi-prefork-perl/libhttp-server-simple-cgi-prefork-perl_6-1_all.deb && sudo dpkg -i libhttp-server-simple-cgi-prefork-perl_6-1_all.deb)
  - ( cd /tmp && sudo apt-get install -yf )

install:
  - perl Build.PL
  - ./Build build
  # We want to lint first, to avoid expensive tests if code isn't clean
  # The "PYTHON_LINT_CALL" environment variable works around an old version of python3-flake8 that
  # is available in the travis environment.
  - PYTHON_LINT_CALL="python3 -m flake8.main" make lint
script:
  - cover -test -report coveralls
  - make clean && dev_scripts/install node && dev_scripts/run munin-node-configure --suggest
