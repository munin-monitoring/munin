#!@@PERL@@
# -*- perl -*-

=head1 NAME

tomcat_threads - Plugin to monitor the number of tomcat-threads
running on the machine, and (in addition to a simple process count),
separate then into "busy" or "idle" servers.

=head1 CONFIGURATION

The following environment variables are used by this plugin:

 url       - Override default status-url
 port      - HTTP port number
 user      - Manager username
 password  - Manager password
 connector - Override connector to monitor

=head1 USAGE

Requirements: Needs access to
http://<user>:<password>@localhost:8080/manager/status?XML=true (or
modify the address for another host).

Tomcat 5.0 or higher.

A munin-user in $CATALINA_HOME/conf/tomcat-users.xml should be set up
for this to work.

Tip: To see if it's already set up correctly, just run this plugin
with the parameter "autoconf". If you get a "yes", everything should
work like a charm already.

tomcat-users.xml example:
    <user username="munin" password="<set this>" roles="standard,manager"/>

=head1 AUTHOR

Rune Nordb√∏e Skillingstad <runesk@linpro.no>

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=manual
 #%# capabilities=autoconf

=cut

use strict;
use Munin::Plugin::HTTP;

my $ret = undef;

if(!eval "require XML::Simple;") {
    $ret .= "XML::Simple not found";
}

my $UA       = Muning::Plugin::HTTP->new;
my $URL      = exists $ENV{'url'}      ? $ENV{'url'}      : "http://%s:%s\@%s:%d/manager/status?XML=true";
my $PORT     = exists $ENV{'port'}     ? $ENV{'port'}     : exists $ENV{'ports'} ? $ENV{'ports'} : 8080;
my $HOST     = exists $ENV{'host'}     ? $ENV{'host'}     : "127.0.0.1";
my $USER     = exists $ENV{'user'}     ? $ENV{'user'}     : "munin";
my $PASSWORD = exists $ENV{'password'} ? $ENV{'password'} : "munin";
my $CONNECTOR= exists $ENV{'connector'}? $ENV{'connector'}: "http-".$PORT;

my $url = sprintf $URL, $USER, $PASSWORD, $HOST, $PORT;

if(exists $ARGV[0] and $ARGV[0] eq "autoconf") {
    if($ret) {
	print "no ($ret)\n";
	exit 0;
    }
    my $repsonse = $UA->get($url);
    if($repsonse->is_success and $repsonse->content =~ /<status>.*<\/status>/im) {
	print "yes\n";
	exit 0;
    } else {
	print "no (no tomcat status)\n";
	exit 0;
    }
}

if(exists $ARGV[0] and $ARGV[0] eq "config") {
    print "graph_title Tomcat threads\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_vlabel threads\n";
    print "graph_category tomcat\n";
    print "graph_total total\n";
    print "graph_order busy idle\n";
    print "busy.label busy threads\n";
    print "busy.draw AREA\n";
    print "idle.label idle threads\n";
    print "idle.draw STACK\n";
    exit 0;
}

my $xs = new XML::Simple;
my $response = $UA->get($url);
my %options = ( KeyAttr => { connector => 'name' }, ForceArray => 1 );
my $xml = $xs->XMLin($response->content, %options);

if($xml->{'connector'}->{$CONNECTOR}->{'threadInfo'}->[0]->{'currentThreadsBusy'} &&
    $xml->{'connector'}->{$CONNECTOR}->{'threadInfo'}->[0]->{'currentThreadCount'}) {
    print "busy.value " . $xml->{'connector'}->{$CONNECTOR}->{'threadInfo'}->[0]->{'currentThreadsBusy'} . "\n";
    print "idle.value " .
	  ($xml->{'connector'}->{$CONNECTOR}->{'threadInfo'}->[0]->{'currentThreadCount'} -
	  $xml->{'connector'}->{$CONNECTOR}->{'threadInfo'}->[0]->{'currentThreadsBusy'}) . "\n";
} else {
    print "busy.value U\n";
    print "idle.value U\n";
}

# vim:syntax=perl
