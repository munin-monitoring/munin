#!/usr/bin/perl

=head1 NAME

tomcat_access - Plugin to monitor the number of accesses to Tomcat
servers.

=head1 CONFIGURATION

The following environment variables are used by this plugin

 url       - Override default status-url
 port      - HTTP port number
 user      - Manager username
 password  - Manager password
 connector - Override connector to monitor

=head1 USAGE

Requirements:

Needs access to
http://<user>:<password>@localhost:8080/manager/status?XML=true (or
modify the address for another host).

Tomcat 5.0 or higher.

A munin-user in $CATALINA_HOME/conf/tomcat-users.xml should be set up
for this to work.

Tip: To see if it's already set up correctly, just run this plugin
with the parameter "autoconf". If you get a "yes", everything should
work like a charm already.

tomcat-users.xml example:
 <user username="munin" password="<set this>" roles="standard,manager"/>

=head1 AUTHOR

Rune Nordb√∏e Skillingstad <runesk@linpro.no>

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=manual
 #%# capabilities=autoconf

=cut

use strict;
use warnings;

use Munin::Plugin::HTTP;
use URI::Escape;

my $ret = undef;

if(!eval "require XML::Simple;") {
    $ret .= "XML::Simple not found";
}

my $UA       = Munin::Plugin::HTTP->new;
my $URL      = exists $ENV{'url'}      ? $ENV{'url'}      : "http://%s:%s\@%s:%d/manager/status?XML=true";
my $PORT     = exists $ENV{'port'}     ? $ENV{'port'}     : exists $ENV{'ports'} ? $ENV{'ports'} : 8080;
my $HOST     = exists $ENV{'host'}     ? $ENV{'host'}     : "127.0.0.1";
my $USER     = exists $ENV{'user'}     ? $ENV{'user'}     : "munin";
my $PASSWORD = exists $ENV{'password'} ? $ENV{'password'} : "munin";
my $TIMEOUT  = exists $ENV{'timeout'}  ? $ENV{'timeout'}  : 30;
my $CONNECTOR= $ENV{'connector'};

my $url = sprintf $URL, uri_escape($USER), uri_escape($PASSWORD), $HOST, $PORT;

if(exists $ARGV[0] and $ARGV[0] eq "autoconf") {
    if($ret) {
        print "no ($ret)\n";
        exit 0;
    }
    my $response = $UA->get($url);
    if($response->is_success and $response->content =~ /<status>.*<\/status>/im) {
	print "yes\n";
	exit 0;
    } else {
        print "no (no tomcat status)\n";
        exit 0;
    }
}

if(exists $ARGV[0] and $ARGV[0] eq "config") {
    print "graph_title Tomcat accesses\n";
    print "graph_args --base 1000\n";
    print "graph_vlabel accesses / \${graph_period}\n";
    print "graph_category appserver\n";
    print "accesses.label Accesses\n";
    print "accesses.type DERIVE\n";
    print "accesses.max 1000000\n";
    print "accesses.min 0\n";
    exit 0;
}

my $xs = new XML::Simple;
my $response = $UA->get($url);
my %options = ( KeyAttr => { connector => 'name' }, ForceArray => 1 );
my $xml = $xs->XMLin($response->content, %options);

my @connectors;
if(defined $CONNECTOR) {
    push @connectors, $CONNECTOR;
} else {
    @connectors = keys %{$xml->{'connector'}};
}

if(exists $ARGV[0] and $ARGV[0] eq "config") {
    print "graph_title Tomcat accesses\n";
    print "graph_args --base 1000\n";
    print "graph_vlabel accesses / \${graph_period}\n";
    print "graph_category appserver\n";
    for my $connector (@connectors) {
        my $clean = clean_fieldname($connector);
        print "${clean}_accesses.label $connector Accesses\n";
        print "${clean}_accesses.type DERIVE\n";
        print "${clean}_accesses.max 1000000\n";
        print "${clean}_accesses.min 0\n";
    }
} else {
    for my $connector (@connectors) {
        my $clean = clean_fieldname($connector);
        if(exists $xml->{'connector'}->{$connector}->{'requestInfo'}->[0]->{'requestCount'}) {
            print "${clean}_accesses.value " . $xml->{'connector'}->{$connector}->{'requestInfo'}->[0]->{'requestCount'} . "\n";
        } else {
            print "${clean}_accesses.value U\n";
        }
    }
}
