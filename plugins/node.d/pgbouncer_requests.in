#!@@PERL@@
# -*- cperl -*-
#
# Copyright (C) 2010 Magnus Hagander, Redpill Linpro AB
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

=head1 NAME

pgbouncer_requests - Plugin to monitor pgbouncer requests.

=head1 CONFIGURATION

Configuration is done through libpq environment variables, for example
PGUSER, PGDATABASE, etc. For more information, see L<Munin::Plugin::Pgsql>.

=head1 SEE ALSO

L<Munin::Plugin::Pgsql>

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=head1 AUTHOR

Magnus Hagander <magnus@hagander.net>, Redpill Linpro AB

=head1 COPYRIGHT/License.

Copyright (c) 2010 Magnus Hagander, Redpill Linpro AB

All rights reserved. This program is free software; you can
redistribute it and/or modify it under the terms of the GNU General
Public License as published by the Free Software Foundation; version 2
dated June, 1991.

=cut

use strict;
use warnings;

use Munin::Plugin::Pgsql;

my $pg = Munin::Plugin::Pgsql->new(
    title       => 'PgBouncer queries',
    info        => 'Number of queries per second',
    vlabel      => 'Queries / sec',
    defaultdb   => 'pgbouncer',
    basequery   => "SHOW STATS",
    postprocess => \&PgBouncerStatsCounter,
    configquery => "SHOW STATS",
    postconfig  => \&PgBouncerStatsConfig,
    graphtype   => 'DERIVE',
    graphmin    => 0,
);

$pg->Process();

sub PgBouncerStatsConfig {
    my $pgresult = shift;

    my @outres;

    foreach my $row (@$pgresult) {
        push @outres, [$row->[0], $row->[0]] unless ($row->[0] eq "pgbouncer");
    }

    return \@outres;
}

sub PgBouncerStatsCounter {
    my $pgresult = shift;

    my @outres;

    foreach my $row (@$pgresult) {
        push @outres, [$row->[0], $row->[1]] unless ($row->[0] eq "pgbouncer");
    }

    return \@outres;
}
